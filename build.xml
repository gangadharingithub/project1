<?xml version="1.0"?>
<project name="project1" default="deploy" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<!--access environment variables -->
	<property environment="env" />

	<!--properties file-->
	<property file="build.properties" />

	<!--directories-->
	<property name="workspace" value="${basedir}" />
	<property name="sourcedir" value="${basedir}/src" />
	<property name="builddir" value="${basedir}/build" />
	<property name="dist" location="${basedir}/target" />

	<property name="groupId" value="${project.groupId}" />
	<property name="artifactId" value="${project.artifactId}" />
	<property name="version" value="${project.version}" />

	<!--destination -->
	<property name="destFile" value="${dist}/${project.artifactId}-${project.version}.tar.gz" />

	<!-- defined maven snapshots and release repository id and url -->
	<property name="snapshots_repo" value="${project.snapshots_repo}" />
	<property name="releases_repo" value="${project.releases_repo}" />
	<property name="project1_snapshots" value="${project.project1_snapshots}" />
	<property name="project1_releases" value="${project.project1_releases}" />

	<target name="deploy" depends="archive">
		<if>
			<contains string="${project.version}" substring="SNAPSHOT" />
			<then>
				<echo message="Deploying to SNAPSHOT REPO" />
				<antcall target="snapshot" />
				<antcall target="sonar" />
			</then>
			<else>
				<echo message="Deploying to RELEASE REPO" />
				<antcall target="release" />
			</else>
		</if>
	</target>
	
	<target name="archive" depends="build">        
		<echo message="Creating archive..." />
		<tar destfile="dist/${artifactId}-${version}.tar.gz" 
			compression="gzip">
		    <fileset dir="dist/project1-app"/>
		</tar>
	</target>

	<target name="snapshot" description="Deploy artifacts to Maven snapshot repository">
		<artifact:mvn failonerror="true">
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${project1_snapshots}" />
			<arg value="-DrepositoryId=${project.snapshots_repo}" />
			<arg value="-DgroupId=${project.groupId}" />
			<arg value="-DartifactId=${project.artifactId}" />
			<arg value="-Dversion=${project.version}" />
			<arg value="-Dfile=${dist}/${project.name}-${project.version}.tar.gz" />
		</artifact:mvn>
	</target>

	<target name="release" description="Deploy artifacts to Maven release repository">
		<artifact:mvn failonerror="true">
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${project1_releases}" />
			<arg value="-DrepositoryId=${project.releases_repo}" />
			<arg value="-DgroupId=${project.groupId}" />
			<arg value="-DartifactId=${project.artifactId}" />
			<arg value="-Dversion=${project.version}" />
			<arg value="-Dfile=${dist}/${project.name}-${project.version}.tar.gz" />
		</artifact:mvn>
	</target>

	<target name="sonar" depends="build" description="Code coverage using Sonar">
		<echo message="Code coverage using sonar...." />
		<!--<exec executable="/local/mnt/sonar-runner-2.4/bin/sonar-runner" failonerror="true" >-->
		<exec executable="/Users/gangadhar/Desktop/bahar/php/sonar-runner-2.4/bin/sonar-runner" failonerror="true">
			<arg line="-Dsonar.projectKey=${project.groupId}:${project.artifactId}" />
			<arg line="-Dsonar.projectName=${project.artifactId}" />
			<arg line="-Dsonar.projectVersion=${project.version}" />
		</exec>
	</target>

	<target name="build" depends="lint,phpunit,phpmd">
		<copy todir="dist/project1-app">
			<fileset dir=".">
				<exclude name="target/" />
				<exclude name="build.xml" />
				<exclude name="tests/" />
				<exclude name="vendor/" />
				<exclude name="build-number.txt" />
				<!-- generated by bamboo -->
			</fileset>
		</copy>
	</target>
	
	<target name="phpmd" depends="vendors" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
	        <exec executable="${basedir}/vendor/bin/phpmd" >
	         <arg path="${basedir}/src" />
	         <arg value="xml" />
	         <arg value="codesize,unusedcode,naming" />
	         <arg value="--reportfile" />
	         <arg value="${basedir}/build/logs/pmd.xml" />
	        </exec>
	</target>
	
	<target name="clean" description="Clean build artifacts">
		<echo message="cleaning all artifacts....." level="info" />
		<delete dir="${builddir}/coverage" />
		<delete dir="${builddir}/logs" />
		<delete dir="${basedir}/vendor" failonerror="true" />        
        <delete dir="${basedir}/build" failonerror="true" /> 
        <delete dir="${basedir}/dist" failonerror="true" />     
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<echo message="Preparing build...${project.version}" level="info" />
		<mkdir dir="${builddir}/coverage" />
		<mkdir dir="${builddir}/logs" />
		<mkdir dir="${workspace}/target" />
	</target>

	<target name="lint" description="Perform syntax check of sourcecode files">
		<echo message="Running lint check..." level="info" />
		<apply executable="php" failonerror="true">
			<arg value="-l" />
			<fileset dir="${sourcedir}">
				<include name="**/*.php" />
				<modified />
			</fileset>
			<fileset dir="${sourcedir}/">
				<include name="**/*Test.php" />
				<modified />
			</fileset>
		</apply>
	</target>

	<target name="vendors" description="Update vendor dependencies using Composer">
		<echo message="Updating vendor dependencies......." level="info" />
		<exec executable="/Users/gangadhar/Desktop/bahar/php/composer.phar" failonerror="true">
			<arg value="update" />
		</exec>
	</target>

	<target name="phpunit" depends="vendors">
	     <exec executable="${basedir}/vendor/bin/phpunit" >   
	        <arg line="--verbose --log-junit ${basedir}/build/logs/phpunit.xml 
	                   --coverage-clover ${basedir}/build/logs/clover.xml 
	                   --coverage-html ${basedir}/build/coverage tests" />
	    </exec>
	</target>
	
</project>
